{"mappings":"ACAA,8BAIA,mDAKA,8BAIA,iDAKA,uDAMA,qCCoCC,uIAQA,6NCnED,yUASA,+SASA,4QASA,2QASA,kTASA,qVASA,0VASA,6XCvBI,2HAUF,+BAAiC,8FASjC,gCAAkC,sEAMhC,wFChBA,+KAUA,8FAIC,iKASD,gGAIC,iGAQD,+BAAiC,oEAM7B,mDAKJ,gCAAkC,gDAI7B,+DC3EL,oEAKA,+BAAiC,oEAKhC,4LAWD,0LAWA,uFAEC,yHAKD,qECuDA,gKAYA,8BAKA,0FAWA,0CAGA,oNAeA,iEAQC,6KAaD,2EC9CA,mHAaA,+BAAiC,kCAIhC,2FAMD,2FAMA,sEAIC,yIAMA,yDASD,oEAMA,sCCnEF,uHAYA,+BACE,4CAKA,gFAIC,iIASA,wIAWD,yDAIC,qEASH,gCACE,kCCjJA,6HASF,+DAIA,2CC4DE,2HAUF,+BAAiC,8FASjC,gCACE,sEAKA,wFAMD,6HAWD,+DAGC,2CAGA,kDClIC,2HAUA,+BAAiC,8FASjC,gCAAkC,sEAMhC,wFCfF,2HAUA,+BAAiC,8FAOhC,gCAGC,sEAIC,wFAOF,6HAUA,+DAIA,2CCxCJ","sources":["index.001e661f.css","src/styles.css","src/routes/login.svelte","node_modules/@fontsource/open-sans/index.css","src/routes/home.svelte","src/components/Header.svelte","src/components/Toggle.svelte","src/components/Postform.svelte","src/components/NavbarDesktop.svelte","src/components/NavbarMobile.svelte","src/components/Status.svelte","src/routes/messages.svelte","src/routes/replies.svelte","src/routes/status.svelte","src/routes/callback/mstdn.svelte"],"sourcesContent":["html {\n  background-color: #252c2c;\n}\n\nmain {\n  color: #fff;\n  font-family: Open Sans, \"sans-serif\";\n}\n\n.imptDetails, p {\n  font-size: 14px;\n}\n\n.imptDetails {\n  letter-spacing: .5px;\n  font-weight: 700;\n}\n\n#dateTime {\n  color: #acacac;\n  font-size: 12px;\n  font-weight: 600;\n}\n\na {\n  color: inherit;\n  text-decoration: none;\n}\n\nmain.svelte-68bvvk {\n  height: 100lvh;\n  width: 100lvw;\n  background-color: #50c0cb;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  display: flex;\n}\n\na.svelte-68bvvk {\n  width: 265px;\n  height: 60px;\n  color: #fff;\n  background-color: #252c2c;\n  border-radius: 8px;\n  justify-content: center;\n  align-items: center;\n  margin: 24px;\n  font-family: Open Sans;\n  font-size: medium;\n  text-decoration: none;\n  display: flex;\n}\n\n@font-face {\n  font-family: Open Sans;\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url(\"open-sans-cyrillic-ext-400-normal.5a91320c.woff2\") format(\"woff2\"), url(\"open-sans-all-400-normal.d48057ff.woff\") format(\"woff\");\n  unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\n}\n\n@font-face {\n  font-family: Open Sans;\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url(\"open-sans-cyrillic-400-normal.09174fa0.woff2\") format(\"woff2\"), url(\"open-sans-all-400-normal.d48057ff.woff\") format(\"woff\");\n  unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116;\n}\n\n@font-face {\n  font-family: Open Sans;\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url(\"open-sans-greek-ext-400-normal.2d040ff0.woff2\") format(\"woff2\"), url(\"open-sans-all-400-normal.d48057ff.woff\") format(\"woff\");\n  unicode-range: U+1F??;\n}\n\n@font-face {\n  font-family: Open Sans;\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url(\"open-sans-greek-400-normal.dc2ae4bd.woff2\") format(\"woff2\"), url(\"open-sans-all-400-normal.d48057ff.woff\") format(\"woff\");\n  unicode-range: U+370-3FF;\n}\n\n@font-face {\n  font-family: Open Sans;\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url(\"open-sans-hebrew-400-normal.942ca237.woff2\") format(\"woff2\"), url(\"open-sans-all-400-normal.d48057ff.woff\") format(\"woff\");\n  unicode-range: U+590-5FF, U+200C-2010, U+20AA, U+25CC, U+FB1D-FB4F;\n}\n\n@font-face {\n  font-family: Open Sans;\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url(\"open-sans-vietnamese-400-normal.979797dd.woff2\") format(\"woff2\"), url(\"open-sans-all-400-normal.d48057ff.woff\") format(\"woff\");\n  unicode-range: U+102-103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U+1EA0-1EF9, U+20AB;\n}\n\n@font-face {\n  font-family: Open Sans;\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url(\"open-sans-latin-ext-400-normal.b040be2e.woff2\") format(\"woff2\"), url(\"open-sans-all-400-normal.d48057ff.woff\") format(\"woff\");\n  unicode-range: U+100-24F, U+259, U+1E??, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n@font-face {\n  font-family: Open Sans;\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url(\"open-sans-latin-400-normal.7cf38e2c.woff2\") format(\"woff2\"), url(\"open-sans-all-400-normal.d48057ff.woff\") format(\"woff\");\n  unicode-range: U+??, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n\nmain.svelte-7lfbus {\n  width: 100%;\n  box-sizing: border-box;\n  flex-direction: column;\n  flex: 1;\n  margin-top: 90px;\n  padding: 2rem;\n  display: flex;\n}\n\n@media screen and (hover: none) {\n  .desktopFormat.svelte-7lfbus {\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0;\n    display: flex;\n  }\n}\n\n@media screen and (hover: hover) {\n  .desktopFormat.svelte-7lfbus {\n    flex-direction: row;\n    margin: 0;\n    display: flex;\n  }\n\n  .content.svelte-7lfbus {\n    width: 100%;\n    flex-direction: column;\n    margin-left: 11.5%;\n    display: flex;\n  }\n}\n\nmain.svelte-1s5cmw4 {\n  z-index: 1;\n  width: 100%;\n  color: #fff;\n  background-color: #252c2c;\n  border-bottom: 3px solid #50c0cb;\n  margin: -8px 0 0;\n  font-family: Open Sans, \"sans-serif\";\n  position: fixed;\n}\n\n.headerContainer.svelte-1s5cmw4 {\n  justify-content: space-between;\n  align-items: center;\n  display: flex;\n}\n\n.headerIcon.svelte-1s5cmw4, .backButtonIcon.svelte-1s5cmw4 {\n  width: 28px;\n  height: 28px;\n  vertical-align: middle;\n  margin-left: 1.5rem;\n  margin-right: 10px;\n  display: inline-block;\n}\n\n.backButtonIcon.svelte-1s5cmw4:hover {\n  fill-opacity: .5;\n  background-color: #3c4444;\n  border-radius: 50%;\n}\n\nh1.svelte-1s5cmw4 {\n  letter-spacing: .5px;\n  vertical-align: middle;\n  font-weight: 700;\n  display: inline-block;\n}\n\n@media screen and (hover: none) {\n  h1.svelte-1s5cmw4 {\n    letter-spacing: .6px;\n    padding: 24px 0;\n    font-size: 18px;\n  }\n\n  .headerContainer.svelte-1s5cmw4 {\n    margin-right: 24px;\n  }\n}\n\n@media screen and (hover: hover) {\n  h1.svelte-1s5cmw4 {\n    padding: 24px 0;\n    font-size: 20px;\n  }\n\n  .headerContainer.svelte-1s5cmw4 {\n    width: 85lvw;\n    margin-right: 24px;\n  }\n}\n\n.slider.svelte-b0scs9.svelte-b0scs9 {\n  align-items: center;\n  display: flex;\n}\n\n@media screen and (hover: none) {\n  .slider.svelte-b0scs9.svelte-b0scs9 {\n    width: 150px;\n    padding-right: 16px;\n  }\n}\n\n.slider.svelte-b0scs9 button.svelte-b0scs9 {\n  width: 3em;\n  height: 1.6em;\n  background-color: #3c4444;\n  border: none;\n  border-radius: 1.5em;\n  margin: 0 0 0 .7em;\n  position: relative;\n  box-shadow: 0 0 0 2px #36676c;\n}\n\n.slider.svelte-b0scs9 button.svelte-b0scs9:before {\n  content: \"\";\n  width: 1.3em;\n  height: 1.3em;\n  background: #fff;\n  border-radius: 100%;\n  transition: transform .3s;\n  position: absolute;\n  top: .18em;\n  right: 1.5em;\n}\n\n.slider.svelte-b0scs9 button[aria-checked=\"true\"].svelte-b0scs9 {\n  background-color: #50c0cb;\n}\n\n.slider.svelte-b0scs9 button[aria-checked=\"true\"].svelte-b0scs9:before {\n  transition: transform .3s;\n  transform: translateX(1.3em);\n}\n\n.slider.svelte-b0scs9 button.svelte-b0scs9:focus {\n  border-radius: 1.5em;\n}\n\n#postContainer.svelte-q309jd {\n  box-sizing: border-box;\n  width: 100%;\n  background-color: #3c4444;\n  border: 4px solid #3c4444;\n  border-radius: 15px;\n  margin: 0 0 32px;\n  display: flex;\n}\n\nform.svelte-q309jd {\n  width: 100%;\n}\n\n#containerTitle.svelte-q309jd {\n  color: #fff;\n  padding: 10px 15px;\n  font-size: 14px;\n  font-weight: bold;\n}\n\n#containerArea.svelte-q309jd {\n  display: flex;\n}\n\ntextarea.svelte-q309jd {\n  color: #acacac;\n  width: 100%;\n  resize: none;\n  background-color: #252c2c;\n  border-width: 0;\n  outline: none;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 15px;\n  font-family: Open Sans;\n  font-size: 12px;\n  display: block;\n}\n\n#containerFooter.svelte-q309jd {\n  text-align: right;\n  padding: 5px 15px;\n}\n\ninput[type=\"submit\"].svelte-q309jd {\n  color: #252c2c;\n  background-color: #50c0cb;\n  border: none;\n  border-radius: 15px;\n  padding: 5px 15px;\n  font-family: Open Sans;\n  font-size: 14px;\n  font-weight: bold;\n}\n\ninput[type=\"submit\"].svelte-q309jd:hover {\n  opacity: .5;\n  background-color: #50c0cb;\n}\n\nmain.svelte-1b19en6 {\n  z-index: 2;\n  color: #fff;\n  width: 12lvw;\n  height: 100lvh;\n  background-color: #50c0cb;\n  position: fixed;\n  inset: 0;\n}\n\n@media screen and (hover: none) {\n  main.svelte-1b19en6 {\n    display: none;\n  }\n}\n\n.iconContainerOutside.svelte-1b19en6 {\n  flex-direction: column;\n  align-items: center;\n  display: flex;\n}\n\n.iconContainer.svelte-1b19en6 {\n  flex-direction: column;\n  gap: 15px;\n  padding-top: 30px;\n  display: flex;\n}\n\n.logout.svelte-1b19en6 {\n  padding-bottom: 30px;\n  position: absolute;\n  bottom: 0;\n}\n\n.mentions.svelte-1b19en6, .dm.svelte-1b19en6, .reply.svelte-1b19en6, .logout.svelte-1b19en6 {\n  height: 40px;\n  justify-content: center;\n  display: flex;\n}\n\n.icon.svelte-1b19en6 {\n  width: 45px;\n  height: 45px;\n  fill: #50c0cb;\n}\n\n.icon.svelte-1b19en6:hover {\n  fill: #fff;\n  opacity: .5;\n  transition: all .25s;\n}\n\n.logo.svelte-1b19en6 {\n  padding-top: 20px;\n}\n\nmain.svelte-1q0kdas {\n  width: 100%;\n  height: 80px;\n  color: #fff;\n  background-color: #50c0cb;\n  margin: 0;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n}\n\n@media screen and (hover: none) {\n  .icon.svelte-1q0kdas {\n    width: 40px;\n    height: 40px;\n  }\n\n  .navBarMobile.svelte-1q0kdas {\n    max-width: 100%;\n    justify-content: center;\n    display: flex;\n  }\n\n  .iconContainer.svelte-1q0kdas {\n    height: 80px;\n    max-width: 400px;\n    flex: auto;\n    justify-content: space-around;\n    align-items: center;\n    display: flex;\n  }\n\n  .mentions.svelte-1q0kdas, .dm.svelte-1q0kdas, .reply.svelte-1q0kdas, .logout.svelte-1q0kdas {\n    width: 40px;\n    justify-content: center;\n    display: flex;\n  }\n\n  .icon.svelte-1q0kdas {\n    width: 45px;\n    height: 45px;\n    fill: #50c0cb;\n  }\n\n  .icon.svelte-1q0kdas:hover {\n    fill: #fff;\n    opacity: .5;\n    transition: all .25s;\n  }\n}\n\n@media screen and (hover: hover) {\n  main.svelte-1q0kdas {\n    display: none;\n  }\n}\n\na.svelte-w2lv1a {\n  color: inherit;\n  border: 1px #50c0cb;\n  border-bottom-style: solid;\n  padding: 0 14px;\n  text-decoration: none;\n  display: block;\n}\n\na.svelte-w2lv1a:hover {\n  fill-opacity: .5;\n  background-color: #3c4444;\n}\n\n.imptDetails.svelte-w2lv1a {\n  margin-bottom: 0;\n}\n\nmain.svelte-rqjyrb {\n  width: 100%;\n  box-sizing: border-box;\n  flex-direction: column;\n  flex: 1;\n  margin-top: 90px;\n  padding: 2rem;\n  display: flex;\n}\n\n@media screen and (hover: none) {\n  .desktopFormat.svelte-rqjyrb {\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0;\n    display: flex;\n  }\n}\n\n@media screen and (hover: hover) {\n  .desktopFormat.svelte-rqjyrb {\n    flex-direction: row;\n    margin: 0;\n    display: flex;\n  }\n\n  .content.svelte-rqjyrb {\n    width: 100%;\n    flex-direction: column;\n    margin-left: 11.5%;\n    display: flex;\n  }\n}\n\na.svelte-rqjyrb {\n  color: inherit;\n  border: 1px #50c0cb;\n  border-bottom-style: solid;\n  padding: 0 14px;\n  text-decoration: none;\n  display: block;\n}\n\na.svelte-rqjyrb:hover {\n  fill-opacity: .5;\n  background-color: #3c4444;\n}\n\n.imptDetails.svelte-rqjyrb {\n  margin-bottom: 0;\n}\n\n.message.svelte-rqjyrb {\n  color: #acacac;\n  display: flex;\n}\n\nmain.svelte-yq548t {\n  width: 100%;\n  box-sizing: border-box;\n  flex-direction: column;\n  flex: 1;\n  margin-top: 90px;\n  padding: 2rem;\n  display: flex;\n}\n\n@media screen and (hover: none) {\n  .desktopFormat.svelte-yq548t {\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0;\n    display: flex;\n  }\n}\n\n@media screen and (hover: hover) {\n  .desktopFormat.svelte-yq548t {\n    flex-direction: row;\n    margin: 0;\n    display: flex;\n  }\n\n  .content.svelte-yq548t {\n    width: 100%;\n    flex-direction: column;\n    margin-left: 11.5%;\n    display: flex;\n  }\n}\n\nmain.svelte-yq548t {\n  width: 100%;\n  box-sizing: border-box;\n  flex-direction: column;\n  flex: 1;\n  margin-top: 90px;\n  padding: 2rem;\n  display: flex;\n}\n\n@media screen and (hover: none) {\n  .desktopFormat.svelte-yq548t {\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0;\n    display: flex;\n  }\n}\n\n@media screen and (hover: hover) {\n  .desktopFormat.svelte-yq548t {\n    flex-direction: row;\n    margin: 0;\n    display: flex;\n  }\n\n  .content.svelte-yq548t {\n    width: 100%;\n    flex-direction: column;\n    margin-left: 11.5%;\n    display: flex;\n  }\n}\n\na.svelte-yq548t {\n  color: inherit;\n  border: 1px #50c0cb;\n  border-bottom-style: solid;\n  padding: 0 14px;\n  text-decoration: none;\n  display: block;\n}\n\na.svelte-yq548t:hover {\n  fill-opacity: .5;\n  background-color: #3c4444;\n}\n\n.imptDetails.svelte-yq548t {\n  margin-bottom: 0;\n}\n\nmain.svelte-r7uk0u {\n  width: 100%;\n  max-width: 64rem;\n  box-sizing: border-box;\n  flex-direction: column;\n  flex: 1;\n  margin: 0 auto;\n  padding: 1rem;\n  display: flex;\n}\n\n/*# sourceMappingURL=index.001e661f.css.map */\n","html {\n  background-color: #252c2c;\n}\n\nmain {\n  font-family: \"Open Sans\", \"sans-serif\";\n  color: white;\n}\n\n.imptDetails, p {\n  font-size: 14px;\n}\n\n.imptDetails {\n  letter-spacing: 0.5px;\n  font-weight: 700;\n}\n\n#dateTime {\n  color: #acacac;\n  font-weight: 600;\n  font-size: 12px;\n}/*# sourceMappingURL=styles.css.map */\n\na {\n  text-decoration: none;\n  color: inherit;\n}\n","<script>\n\timport \"@fontsource/open-sans\"\n\n\timport {replace} from 'svelte-spa-router';\n\timport {onMount} from 'svelte';\n\n\tlet state = \"\";\n\tlet code = \"\";\n\t\n\tonMount(async() => {\n\t\t\n\t\tconst urlSearchParams = new URLSearchParams(window.location.search);\n\n\t\tlet data = null;\n\n\t\tif(urlSearchParams.get(\"code\")){\n\t\t\tconst res = await fetch('/auth/mstdn/callback?' + new URLSearchParams({\n\t\t\t\tcode: urlSearchParams.get(\"code\")\n\t\t\t}));\n\n\t\t\tlet data = await res.json();\n\t\t\tif(res.ok){\n\t\t\t\tcode = data[\"status\"];\n\t\t\t\twindow.location.replace(\"/#/home\")\n\t\t\t} else {\n\t\t\t\twindow.location.replace(\"/\")\n\t\t\t}\n\t\t}\n\t});\n\n\tasync function getMstdnAuthLink(){\n\n\t\tlet res = await fetch('/auth/mstdn');\n\t\tlet text = await res.text();\n\n\t\tif (res.ok){\n\t\t\tlet auth_json = JSON.parse(text)\n\t\t\treturn auth_json[\"auth_url\"];\n\t\t} else{\n\t\t\tthrow new Error(text);\n\t\t}\n\t}\n\n\tlet mstdn_auth_promise = getMstdnAuthLink();\n\n</script>\n\n<main>\n\t{#await mstdn_auth_promise}\n\t\t<p>waiting...</p>\n\t{:then url}\n\t\t<p>\n\t\t\t<a href={url}>Log-in Using Mastodon</a>\n\t\t</p>\n\t{:catch error}\n\t\t<p style=\"color: red\">{error.message}</p>\n\t{/await}\n</main>\n\n<style>\n\tmain {\n  height: 100lvh;\n  width: 100lvw;\n  margin: 0;\n  background-color: #50c0cb;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\na {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 8px;\n  width: 265px;\n  height: 60px;\n  background-color: #252c2c;\n  color: white;\n  text-decoration: none;\n  margin: 24px;\n  font-family: \"Open Sans\";\n  font-size: medium;\n}/*# sourceMappingURL=styles.css.map */\n</style>","/* open-sans-cyrillic-ext-400-normal*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/open-sans-cyrillic-ext-400-normal.woff2') format('woff2'), url('./files/open-sans-all-400-normal.woff') format('woff');\n  unicode-range: U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F;\n}\n/* open-sans-cyrillic-400-normal*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/open-sans-cyrillic-400-normal.woff2') format('woff2'), url('./files/open-sans-all-400-normal.woff') format('woff');\n  unicode-range: U+0301,U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116;\n}\n/* open-sans-greek-ext-400-normal*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/open-sans-greek-ext-400-normal.woff2') format('woff2'), url('./files/open-sans-all-400-normal.woff') format('woff');\n  unicode-range: U+1F00-1FFF;\n}\n/* open-sans-greek-400-normal*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/open-sans-greek-400-normal.woff2') format('woff2'), url('./files/open-sans-all-400-normal.woff') format('woff');\n  unicode-range: U+0370-03FF;\n}\n/* open-sans-hebrew-400-normal*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/open-sans-hebrew-400-normal.woff2') format('woff2'), url('./files/open-sans-all-400-normal.woff') format('woff');\n  unicode-range: U+0590-05FF,U+200C-2010,U+20AA,U+25CC,U+FB1D-FB4F;\n}\n/* open-sans-vietnamese-400-normal*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/open-sans-vietnamese-400-normal.woff2') format('woff2'), url('./files/open-sans-all-400-normal.woff') format('woff');\n  unicode-range: U+0102-0103,U+0110-0111,U+0128-0129,U+0168-0169,U+01A0-01A1,U+01AF-01B0,U+1EA0-1EF9,U+20AB;\n}\n/* open-sans-latin-ext-400-normal*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/open-sans-latin-ext-400-normal.woff2') format('woff2'), url('./files/open-sans-all-400-normal.woff') format('woff');\n  unicode-range: U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF;\n}\n/* open-sans-latin-400-normal*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/open-sans-latin-400-normal.woff2') format('woff2'), url('./files/open-sans-all-400-normal.woff') format('woff');\n  unicode-range: U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD;\n}\n","<script>\n    import Header from \"../components/Header.svelte\";\n    import Postform from \"../components/Postform.svelte\";\n    import NavbarDesktop from \"../components/NavbarDesktop.svelte\";\n    import NavbarMobile from \"../components/NavbarMobile.svelte\";\n    import Status from '../components/Status.svelte';\n\n    import { getHomeContent } from \"../sdk/mentions_timeline\";\n\n    import {link} from 'svelte-spa-router';\n\n\n    let auth_promise = getHomeContent();\n\n</script>\n  \n  <div class=\"desktopFormat\">\n    <NavbarDesktop title=\"Mentions\"/>\n  \n    <div class=\"content\">\n      <Header title=\"Mentions\"/>\n      <main>\n        <Postform />\n        {#await auth_promise}\n          <p>waiting...</p>\n        {:then response}\n          {#each response as status}\n\n            <Status status={status}/>\n\n          {/each}\n        {:catch error}\n          <p style=\"color: red\">{error.message}</p>\n        {/await}\n      </main>\n    </div>\n  \n    <NavbarMobile title=\"Mentions\"/>\n  </div>\n  \n<style>\n    main {\n    margin-top: 90px;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    padding: 2rem;\n    width: 100%;\n    box-sizing: border-box;\n  }\n\n  @media screen and (hover: none) {\n    .desktopFormat {\n      display: flex;\n      flex-direction: column;\n      align-items: stretch;\n      margin: 0;\n    }\n  }\n\n  @media screen and (hover: hover) {\n    .desktopFormat {\n      display: flex;\n      flex-direction: row;\n      margin: 0;\n    }\n    .content {\n      display: flex;\n      flex-direction: column;\n      margin-left: 11.5%;\n      width: 100%;\n    }\n  }\n\n  \n  \n</style>","<script>\n    // Component needed for header\n    import Toggle from \"./Toggle.svelte\";\n\n    // Font family to be used\n    import \"@fontsource/open-sans\";\n\n    // Variables needed for the Header and Toggle components\n    export let title;  \n    export let value = \"none\";\n\n    // Icons that would be used for the Header\n    import MentionsHeader from \"../../public/mentionsHeader.svelte\";\n    import MessagesHeader from \"../../public/dmHeader.svelte\";\n    import RepliesHeader from \"../../public/replyHeader.svelte\";\n    import BackButton from \"../../public/back.svelte\"\n\n</script>\n\n<main>\n    <div class=\"headerContainer\">\n        <div class=\"headerContent\">\n            {#if title == \"Mentions\"}\n                <div class=\"headerIcon\">\n                    <MentionsHeader/>\n                </div>\n            {:else if title == \"Replies\"}\n                <div class=\"headerIcon\">\n                    <RepliesHeader/>\n                </div>\n            {:else if title == \"Messages\"}\n                <div class=\"headerIcon\">\n                    <MessagesHeader/>\n                </div>\n            {:else}\n                <a class=\"backButtonIcon\" href=\"/#/home\">\n                    <BackButton/>        \n                </a>\n            {/if}\n            \n            <h1 class=\"Menu\">{title}</h1>\n        </div>\n    \n        {#if title==\"Replies\"}\n            <Toggle bind:value={value} label=\"Show Replies\"/>\n        {/if}\n    </div>\n</main>\n\n<style>\n    main {\n        position: fixed;\n        z-index: 1;\n        width: 100%;\n        font-family: \"Open Sans\", \"sans-serif\";\n        background-color: #252c2c;\n        color: white;\n        border-bottom: 3px solid #50c0cb;\n        margin: -8px 0px 0px 0px;\n    }\n    .headerContainer {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n    .headerIcon, .backButtonIcon {\n        width: 28px;\n        height: 28px;\n        display: inline-block;\n        vertical-align: middle;\n        margin-left: 1.5rem;\n        margin-right: 10px;\n    }\n    .backButtonIcon:hover {\n        background-color: #3c4444;\n        fill-opacity: 0.5;\n        border-radius: 50%;\n    }\n    h1 {\n        font-weight: 700;\n        letter-spacing: 0.5px;   \n        display:inline-block;\n        vertical-align: middle;     \n    }\n    \n    @media screen and (hover: none) {\n        h1 {\n            padding: 24px 0px;\n            letter-spacing: 0.6px;\n            font-size: 18px;\n        }\n        .headerContainer {\n            margin-right: 24px;\n        }\n    }\n    \n    @media screen and (hover: hover) {\n        h1 {\n            padding: 24px 0px;\n            font-size: 20px;\n        }\n        .headerContainer {\n            width: 85lvw;\n            margin-right: 24px;\n        }\n    }\n</style>","<script>\n    export let label;\n    export let value;\n    let checked = false; // Replies are not displayed by default\n\n    function handleClick(e){\n        const target = e.target;\n        const state = target.getAttribute(\"aria-checked\");\n        checked = state === 'true' ? false : true;\n        value = checked === true ? 'flex' : 'none';\n    }\n</script>\n\n<main>\n    <div class=\"slider\">\n        <span id=\"sliderToggle\">{label}</span>\n        <button\n            role=\"switch\"\n            aria-checked={checked}\n            aria-labelledby=\"sliderToggle\"\n          on:click={handleClick}></button>  \n    </div>\n</main>\n\n<style>\n    .slider {\n        display: flex;\n        align-items: center;\n    }\n\n    @media screen and (hover: none) {\n        .slider {\n            width: 150px;\n            padding-right: 16px;\n        }\n    }\n    .slider button {\n        width: 3em;\n        height: 1.6em;\n        position: relative;\n        margin: 0 0 0 0.7em;\n        background-color: #3C4444;\n        border: none;\n        border-radius: 1.5em;\n        box-shadow: 0px 0px 0px 2px #36676c;\n    }\n    .slider button::before {\n        content: '';\n        position: absolute;\n        width: 1.3em;\n        height: 1.3em;\n        background: #fff;\n        top: 0.18em;\n        right: 1.5em;\n        transition: transform 0.3s;\n        border-radius: 100%;\n    }\n    .slider button[aria-checked='true'] {\n      background-color: #50C0CB;\n    }\n    .slider button[aria-checked='true']::before{\n        transform: translateX(1.3em);\n        transition: transform 0.3s;\n    }\n    .slider button:focus {\n        border-radius: 1.5em;\n    }\n</style>","<script>\n\n    import {replace} from 'svelte-spa-router';\n\n    import Poll from \"./Poll.svelte\";\n    import MediaInput from \"./MediaInput.svelte\"\n\n    let attachmentType = \"none\";\n\n    let statusText;\n    let image;\n    let imageValue;\n    \n    let pollChoices;\n    let pollOption;\n    let pollDeadline;\n\n    let contentWarningToggle = false;\n    let contentWarningText = \"\";\n\n    const handleOnSubmit = e => {\n        const ACTION_URL = e.target.action;\n        const formData = new FormData()\n\n        formData.append(\"attachmentType\", attachmentType)\n        formData.append(\"text\", statusText);\n        formData.append(\"contentWarning\", contentWarningToggle);\n        \n        if(contentWarningToggle){\n            formData.append(\"contentWarningText\", contentWarningText)\n        }\n\n        if(attachmentType == \"poll\"){\n            formData.append(\"choices\", JSON.stringify(pollChoices));\n            formData.append(\"option\", pollOption);\n            formData.append(\"deadline\", pollDeadline);\n        }else if(attachmentType == \"media\"){\n            for(let i = 0; i < image.length; i++){\n                formData.append(\"images_\"+i, image[i]);\n            }\n        }\n\n        statusText = \"\";\n\n        contentWarningToggle = false;\n        contentWarningText = \"\";\n        \n        imageValue = \"\";\n        image = \"\";\n        \n        pollChoices = [\n            \"\", \"\"\n        ];\n\n        pollOption = true;\n        deadline = 300;\n\n        fetch(ACTION_URL, {\n            method: 'POST',\n            body: formData\n        });        \n\n    }\n\n    function changeattachmentType(){\n        if(attachmentType == \"none\"){\n            attachmentType = \"media\";\n        }else if(attachmentType == \"media\"){\n            attachmentType = \"poll\";\n        }else{\n            attachmentType = \"none\"\n        }\n    }\n\n    function changeCW(){\n        contentWarningToggle = ! contentWarningToggle;\n    }\n</script>\n\n\n<div id=\"postContainer\">\n    <form action=\"/api/compose/\" on:submit|preventDefault={handleOnSubmit} enctype=\"multipart/form-data\">\n        <div id=\"containerTitle\">\n            <span>\n                Write your thoughts\n            </span>\n        </div>\n\n        <div id=\"containerArea\">\n            <textarea id=\"text\" name=\"text\" rows=\"3\" bind:value={statusText}/>\n        </div>\n\n        <br>\n        <button type=\"button\" on:click={changeCW}> {#if !contentWarningToggle} Enable {:else} Disable {/if} Content Warning </button>\n        {#if contentWarningToggle}\n            <input type=\"text\" bind:value={contentWarningText} /> \n        {/if}\n        <br>\n\n        <button type=\"button\" on:click={changeattachmentType}>Attachment: {attachmentType}</button>\n\n        {#if attachmentType==\"media\"}\n\n            <MediaInput bind:imageValue={imageValue} bind:image={image}/>\n\n        {:else if attachmentType==\"poll\"}\n\n            <Poll bind:choices={pollChoices} bind:option={pollOption} bind:deadline={pollDeadline}/>\n\n        {/if}\n\n        <div id=\"containerFooter\">\n            <input id=\"submitButton\" type=\"submit\" value=\"Post\">\n        </div>\n\n    </form>\n</div>\n\n<style>\n    #postContainer {\n        box-sizing: border-box;\n        display: flex;\n        border-radius: 15px;   \n        border: solid;\n        border-color:#3c4444;\n        border-width:4px;\n        background-color: #3c4444 ; /*#50c0cb #3c4444 #36676c;  */\n        margin: 0 0 32px 0;\n        width: 100%;\n    }\n    \n    form {\n        width: 100%;    \n    }\n    \n\n    #containerTitle{\n        /*\n        border-bottom: 2px;\n        border-bottom-style: solid;\n        border-color: black;\n        */\n        font-size: 14px;\n        padding: 10px 15px;\n        font-weight: bold;\n        color: white;\n    }\n    #containerArea{\n        display: flex;\n    }\n    textarea {\n        color: #acacac;\n        background-color: #252c2c;\n        font-family:\"Open Sans\";  \n        font-size: 12px;   \n        width: 100%;\n        border-width: 0;\n        resize: none;\n        outline: none;\n        padding: 15px;\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n    }\n    \n    #containerFooter{\n        /*\n        border-top: 2px;\n        border-top-style: solid;\n        border-color: black;\n        */\n        padding: 5px 15px; \n        text-align: right;\n    }\n\n    input[type=\"submit\"] {\n        background-color: #50c0cb;\n        color: #252c2c;\n        font-family:\"Open Sans\";  \n        font-size: 14px;\n        font-weight: bold;\n        border: none;\n        padding: 5px 15px;\n        border-radius: 15px; \n    }\n\n    input[type=\"submit\"]:hover {\n        background-color: #50c0cb; /*#a7dfe5;*/\n        opacity: 0.5;\n \n    }\n</style>","<script>\n    // Used to help svelte distinguish between pages\n    export let title;\n\n    // Icons for the navbar\n    import Logo from \"../../public/logo.svelte\";\n\n    import ClickedMentions from \"../../public/mentionsClicked.svelte\";\n    import ClickedReplies from \"../../public/replyClicked.svelte\";\n    import ClickedDM from \"../../public/dmClicked.svelte\";\n    \n    import UnclickedMentions from \"../../public/mentionsUnclicked.svelte\";\n    import UnclickedReplies from \"../../public/replyUnclicked.svelte\";\n    import UnclickedDM from \"../../public/dmUnclicked.svelte\";\n    \n    import Logout from \"../../public/Logout.svelte\";\n\n\n    import {onMount} from 'svelte';\n\n\n    let mstdnLogin = true;\n    let mstdnLoginLink = \"\";\n\n\n    onMount(async () =>{\n        mstdnLogin = document.cookie.split(\";\").some((item) => item.trim().startsWith(\"mstdnAccessToken=\"));\n\n        if(mstdnLogin == false){\n            let res = await fetch('/auth/mstdn');\n            let text = await res.json();\n\n            if (res.ok){\n                mstdnLoginLink = text[\"auth_url\"];\n            }\n        }\n    });\n    \n    async function sendMstdnLogout(event){\n\n        let res = await fetch('/auth/mstdn/logout');\n\t\tlet text = await res.json();\n\n\t\tif (res.ok){\n            window.location.replace(\"/\");\n\t\t} else {\n\t\t\tthrow new Error(text);\n\t\t} \n    }\n    \n\n</script>\n\n<main>\n    <nav class=\"navBarDesktop\">\n        <div class=\"iconContainerOutside\">\n            <div class=\"logo\">\n                <Logo/>\n            </div>\n            <div class=\"iconContainer\">\n\n                {#if title == \"Mentions\"}\n                    <div class=\"mentions\">\n                        <a class=\"icon\" href=\"/#/home\">\n                            <ClickedMentions/>         \n                        </a>\n                    </div>  \n                    <div class=\"reply\">\n                        <a class=\"icon\" href=\"/#/replies\">\n                            <UnclickedReplies/>        \n                        </a>\n                    </div>\n                    <div class=\"dm\">\n                        <a class=\"icon\" href=\"/#/messages\">\n                            <UnclickedDM/>         \n                        </a>\n                    </div>\n                {:else if title == \"Replies\"}\n                    <div class=\"mentions\">\n                        <a class=\"icon\" href=\"/#/home\">\n                            <UnclickedMentions/>         \n                        </a>\n                    </div>  \n                    <div class=\"reply\">\n                        <a class=\"icon\" href=\"/#/replies\">\n                            <ClickedReplies/>        \n                        </a>\n                    </div>\n                    <div class=\"dm\">\n                        <a class=\"icon\" href=\"/#/messages\">\n                            <UnclickedDM/>         \n                        </a>\n                    </div>\n                {:else if title == \"Messages\"}\n                    <div class=\"mentions\">\n                        <a class=\"icon\" href=\"/#/home\">\n                            <UnclickedMentions/>         \n                        </a>\n                    </div>  \n                    <div class=\"reply\">\n                        <a class=\"icon\" href=\"/#/replies\">\n                            <UnclickedReplies/>        \n                        </a>\n                    </div>\n                    <div class=\"dm\">\n                        <a class=\"icon\" href=\"/#/messages\">\n                            <ClickedDM/>         \n                        </a>\n                    </div>\n                {:else}\n                    <!--Expected behavior for now-->\n                    <div class=\"mentions\">\n                        <a class=\"icon\" href=\"/#/home\">\n                            <ClickedMentions/>         \n                        </a>\n                    </div>  \n                    <div class=\"reply\">\n                        <a class=\"icon\" href=\"/#/replies\">\n                            <UnclickedReplies/>        \n                        </a>\n                    </div>\n                    <div class=\"dm\">\n                        <a class=\"icon\" href=\"/#/messages\">\n                            <UnclickedDM/>         \n                        </a>\n                    </div>\n                {/if}\n            </div>\n            <div class=\"logout\">\n                <a class=\"icon\" on:click={sendMstdnLogout} href=\"#0\">\n                    <!--Log Out Mastodon-->\n\n                    <Logout/>\n                </a>\n            </div>\n        </div>\n    </nav>  \n</main>\n\n<style>\n    main {\n        z-index: 2;\n        position: fixed;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n        background-color: #50c0cb;\n        color: white;\n        width: 12lvw;\n        height: 100lvh;\n    }\n\n    @media screen and (hover: none) {\n        main {\n            display: none;\n        }\n    }\n    .iconContainerOutside {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n    .iconContainer {\n        padding-top: 30px;\n        display: flex;\n        flex-direction: column;\n        gap: 15px;\n    }\n    .logout {\n        position: absolute;\n        bottom: 0;\n        padding-bottom: 30px;\n    }\n\n    .mentions, .dm, .reply, .logout{\n        height: 40px;\n        display: flex;\n        justify-content: center;\n    }\n    \n    .icon {\n        width: 45px;\n        height: 45px;\n        fill: #50C0CB;\n    }\n    \n    \n    .icon:hover {\n        fill: #fff;\n        opacity:0.5;\n        transition: 0.25s ease;\n    }\n\n    .logo {\n        padding-top: 20px;\n    }\n</style>","<script>\n  // Used to help svelte distinguish between pages\n  export let title;\n\n  // Icons for the navbar\n  import ClickedMentions from \"../../public/mentionsClicked.svelte\";\n  import ClickedReplies from \"../../public/replyClicked.svelte\";\n  import ClickedDM from \"../../public/dmClicked.svelte\";\n\n  import UnclickedMentions from \"../../public/mentionsUnclicked.svelte\";\n  import UnclickedReplies from \"../../public/replyUnclicked.svelte\";\n  import UnclickedDM from \"../../public/dmUnclicked.svelte\";\n\n  import Logout from \"../../public/Logout.svelte\";\n\n  import {onMount} from 'svelte';\n\n  let mstdnLogin = true;\n  let mstdnLoginLink = \"\";\n\n  onMount(async () =>{\n        mstdnLogin = document.cookie.split(\";\").some((item) => item.trim().startsWith(\"mstdnAccessToken=\"));\n\n        if(mstdnLogin == false){\n            let res = await fetch('/auth/mstdn');\n            let text = await res.json();\n\n            if (res.ok){\n                mstdnLoginLink = text[\"auth_url\"];\n            }\n        }\n    });\n\n    async function sendMstdnLogout(event){\n\n        let res = await fetch('/auth/mstdn/logout');\n\t\t    let text = await res.json();\n\n\t\t    if (res.ok){\n          window.location.replace(\"/\");\n\t\t    } else{\n\t\t\t    throw new Error(text);\n\t\t    } \n    }\n</script>\n\n\n<main>\n  <nav class=\"navBarMobile\">\n    <div class=\"iconContainer\">\n      {#if title == \"Mentions\"}\n        <div class=\"mentions\">\n            <a class=\"icon\" href=\"/#/home\">\n                <ClickedMentions/>         \n            </a>\n        </div>  \n        <div class=\"reply\">\n            <a class=\"icon\" href=\"/#/replies\">\n                <UnclickedReplies/>        \n            </a>\n        </div>\n        <div class=\"dm\">\n            <a class=\"icon\" href=\"/#/messages\">\n                <UnclickedDM/>         \n            </a>\n        </div>\n      {:else if title == \"Replies\"}\n          <div class=\"mentions\">\n              <a class=\"icon\" href=\"/#/home\">\n                  <UnclickedMentions/>         \n              </a>\n          </div>  \n          <div class=\"reply\">\n              <a class=\"icon\" href=\"/#/replies\">\n                  <ClickedReplies/>        \n              </a>\n          </div>\n          <div class=\"dm\">\n              <a class=\"icon\" href=\"/#/messages\">\n                  <UnclickedDM/>         \n              </a>\n          </div>\n      {:else if title == \"Messages\"}\n          <div class=\"mentions\">\n              <a class=\"icon\" href=\"/#/home\">\n                  <UnclickedMentions/>         \n              </a>\n          </div>  \n          <div class=\"reply\">\n              <a class=\"icon\" href=\"/#/replies\">\n                  <UnclickedReplies/>        \n              </a>\n          </div>\n          <div class=\"dm\">\n              <a class=\"icon\" href=\"/#/messages\">\n                  <ClickedDM/>         \n              </a>\n          </div>\n      {:else}\n          <!--Expected behavior for now-->\n          <div class=\"mentions\">\n              <a class=\"icon\" href=\"/#/home\">\n                  <ClickedMentions/>         \n              </a>\n          </div>  \n          <div class=\"reply\">\n              <a class=\"icon\" href=\"/#/replies\">\n                  <UnclickedReplies/>        \n              </a>\n          </div>\n          <div class=\"dm\">\n              <a class=\"icon\" href=\"/#/messages\">\n                  <UnclickedDM/>         \n              </a>\n          </div>\n      {/if}\n      <div class=\"logout\">\n        <a class=\"icon\" on:click={sendMstdnLogout} href=\"#0\">\n            <!--Log Out Mastodon-->\n            <Logout/>\n        </a>\n      </div>\n    </div>\n  </nav>\n</main>\n\n<style>\n  main {\n    position: fixed;\n    width: 100%;\n    height: 80px;\n    left: 0;\n    bottom: 0;\n    margin: 0;\n    background-color: #50c0cb;\n    color: white;\n  }\n\n  /*Touch screen*/\n  @media screen and (hover: none) {\n    .icon {\n      width: 40px;\n      height: 40px;\n    }\n\n    .navBarMobile {\n      display: flex;\n      max-width: 100%;\n      justify-content: center;\n    }\n\n    .iconContainer {\n      display: flex;\n      flex: 1 1 auto;\n      height: 80px;\n      max-width: 400px;\n      justify-content: space-around;\n      align-items: center;\n    }\n\n    .mentions,\n    .dm,\n    .reply,\n    .logout {\n      width: 40px;\n      display: flex;\n      justify-content: center;\n    }\n\n    .icon {\n        width: 45px;\n        height: 45px;\n        fill: #50C0CB;\n    }\n    \n    .icon:hover {\n        fill: #fff;\n        opacity:0.5;\n        transition: 0.25s ease;\n    }\n  }\n  /*Desktop or Laptop*/\n  @media screen and (hover: hover) {\n    main {\n      display: none;\n    }\n  }\n</style>\n","<script>\n    import {link} from 'svelte-spa-router';\n\n    export let status;\n\n    let showContent = false;\n\n</script>\n\n\n\n    <!--Change href to mentions thread-->\n    <p id=\"source\" class=\"imptDetails\">{status[\"account\"][\"username\"]}</p>\n    <span id=\"dateTime\">{status[\"created_at\"]}</span><br />\n    {#if status[\"sensitive\"]}\n        <span id=\"spoilerText\">{status[\"spoiler_text\"]} <button type=\"button\" on:click={()=>{showContent = !showContent}}> {#if showContent} Hide {:else} Show {/if} Content</button></span>\n    {/if}\n    <a class=\"post\" href=\"/toot/{status[\"id\"]}\" use:link>\n    {#if !status[\"sensitive\"] || (status[\"sensitive\"] && showContent)}\n        <p>{@html status[\"content\"]}</p>\n        {#if status[\"media_attachments\"].length !== 0}\n        {#each status[\"media_attachments\"] as image}\n            <img src=\"{image[\"url\"]}\" alt=\"something\"/>\n        {/each}\n        {:else if status[\"poll\"] !== null}\n        <!-- {console.log(status[\"poll\"])} -->\n        <ul>\n        {#each status[\"poll\"][\"options\"] as choice}\n            <li>{choice[\"title\"]} - Votes: {choice[\"votes_count\"]}</li>\n        {/each}\n        </ul>\n\n        Total Votes - {status[\"poll\"][\"votes_count\"]}\n        {/if}\n    {/if}\n  </a>\n\n  <style>\n    a {\n    display: block;\n    text-decoration: none;\n    color: inherit;\n    border-style: none none solid none;\n    border-color: #50c0cb;\n    border-width: 1px;\n    padding: 0px 14px;\n  }\n  a:hover {\n    background-color: #3c4444;\n    fill-opacity: 0.5;\n  }\n  .imptDetails {\n    margin-bottom: 0;\n  }\n  </style>","<script>\n  import Header from \"../components/Header.svelte\";\n  //import Postform from \"../components/Postform.svelte\";\n  import NavbarDesktop from \"../components/NavbarDesktop.svelte\";\n  import NavbarMobile from \"../components/NavbarMobile.svelte\";\n\n  import { getMessageContent } from \"../sdk/conversations\";\n\n  let auth_promise = getMessageContent();\n  \n  async function isolateConversations() {\n    let listOfMessages = await getMessageContent();\n    let conversationsDict = {};\n    for(let message of listOfMessages) {\n      //console.log(message);\n      if(!(message[\"participantIDs\"][0][\"username\"] in conversationsDict)) {\n        console.log(\"new user\");\n        console.log(message[\"participantIDs\"][0]);\n        conversationsDict[message[\"participantIDs\"][0][\"username\"]] = [message];\n      }   \n      else {\n        conversationsDict[message[\"participantIDs\"][0][\"username\"]].push(message);\n      }\n    }\n    console.log(\"convesationsDict\");\n    console.log(conversationsDict);\n    \n    return conversationsDict;\n    \n  \n  }\n\n  let test = isolateConversations();\n  \n  /*isolateConversations().then(function(){\n    console.log(listOfMessages);\n    \n  });\n\n  console.log(conversationsDict);*/\n  \n  \n \n  \n\n  \n  \n</script>\n\n<div class=\"desktopFormat\">\n  <NavbarDesktop title=\"Messages\"/>\n  \n  <div class=\"content\">\n    <Header title=\"Messages\"/>\n    <main>\n      <!--\n      {#await auth_promise}\n        <p>waiting...</p>\n      {:then conversations}\n        {#each conversations as conversation}\n          <a class=\"conversation\" href=\"/messages\">\n            <p class=\"imptDetails\">Conversation with {conversation[\"participantIDs\"][0][\"username\"]} <span id=\"dateTime\">| {conversation[\"createdTime\"]}</span></p>\n            <div class=\"message\">\n              <p>{conversation[\"author\"][\"username\"]}:&nbsp</p>\n              {@html conversation[\"content\"]}\n            </div>\n          </a>\n        {/each}\n      {:catch error}\n        <p style=\"color: red\">{error.messages}</p>\n      {/await}\n      -->\n      {#await test}\n        <p>waiting...</p>\n      {:then conversationsDict}\n        {#each Object.entries(conversationsDict) as [key, value]}\n        <!--Displays latest message-->\n        <!--\n        <a class=\"conversation\" href=\"/messages\">\n          <p class=\"imptDetails\">{key} <span id=\"dateTime\">| {value[0][\"createdTime\"]}</span></p>\n          \n            \n          <div class=\"message\">\n            <p>{value[0][\"author\"][\"username\"]}:&nbsp</p>\n            {@html value[0][\"content\"]}\n          </div>\n\n        </a>\n        -->\n        <!--Displays all messages-->  \n        <a class=\"conversation\" href=\"/#/messages\">\n          <p class=\"imptDetails\">{key} <span id=\"dateTime\">| {value[0][\"createdTime\"]}</span></p>\n          {#each value as message}\n            <div class=\"message\">\n              <p>{value[0][\"author\"][\"username\"]}:&nbsp</p>\n              {@html message[\"content\"]}\n            </div>\n            \n          {/each}\n        </a>\n        {/each}\n      {:catch error}\n        <p style=\"color: red\">{error.messages}</p>\n      {/await}\n    </main>\n  </div>\n\n  <NavbarMobile title=\"Messages\"/>\n</div>\n\n<style>\n    main {\n    margin-top: 90px;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    padding: 2rem;\n    width: 100%;\n    box-sizing: border-box;\n  }\n\n  @media screen and (hover: none) {\n    .desktopFormat {\n      display: flex;\n      flex-direction: column;\n      align-items: stretch;\n      margin: 0;\n    }\n  }\n\n  @media screen and (hover: hover) {\n    .desktopFormat {\n      display: flex;\n      flex-direction: row;\n      margin: 0;\n    }\n    .content {\n      display: flex;\n      flex-direction: column;\n      margin-left: 11.5%;\n      width: 100%;\n    }\n  }\n\n  a {\n    display: block;\n    text-decoration: none;\n    color: inherit;\n    border-style: none none solid none;\n    border-color: #50c0cb;\n    border-width: 1px;\n    padding: 0px 14px;\n  }\n  a:hover {\n    background-color: #3c4444;\n    fill-opacity: 0.5;\n  }\n  .imptDetails {\n    margin-bottom: 0;\n  }\n  \n  .message {\n    color: #acacac;\n    display: flex;\n  }\n  \n</style>","<script>\n\n    import Header from \"../components/Header.svelte\";\n    import NavbarDesktop from \"../components/NavbarDesktop.svelte\"; \n    import NavbarMobile from \"../components/NavbarMobile.svelte\";\n  \n    let value;\n  \n    async function getHomeContent() {\n      // TODO\n    }\n  \n    let auth_promise = getHomeContent();\n  </script>\n  \n  <div class=\"desktopFormat\">\n    <NavbarDesktop title=\"Replies\"/>\n  \n    <div class=\"content\">\n      <Header bind:value={value} title=\"Replies\"/>\n      <main style=\"display:{value}\">\n        <!-- TODO -->\n      </main>\n    </div>\n  \n    <NavbarMobile title=\"Replies\"/>\n  </div>\n  \n  <style>\n    main {\n      margin-top: 90px;\n      flex: 1;\n      display: flex;\n      flex-direction: column;\n      padding: 2rem;\n      width: 100%;\n      box-sizing: border-box;\n    }\n  \n    @media screen and (hover: none) {\n      .desktopFormat {\n        display: flex;\n        flex-direction: column;\n        align-items: stretch;\n        margin: 0;\n      }\n    }\n  \n    @media screen and (hover: hover) {\n      .desktopFormat {\n        display: flex;\n        flex-direction: row;\n        margin: 0;\n      }\n      .content {\n        display: flex;\n        flex-direction: column;\n        margin-left: 11.5%;\n        width: 100%;\n      }\n    }\n  \n    a {\n      display: block;\n      text-decoration: none;\n      color: inherit;\n      border-style: none none solid none;\n      border-color: #50c0cb;\n      border-width: 1px;\n      padding: 0px 14px;\n    }\n    a:hover {\n      background-color: #3c4444;\n      fill-opacity: 0.5;\n    }\n    .imptDetails {\n      margin-bottom: 0;\n    }\n    \n  </style>\n  ","<script>\n    import Header from \"../components/Header.svelte\";\n    import NavbarDesktop from \"../components/NavbarDesktop.svelte\";\n    import NavbarMobile from \"../components/NavbarMobile.svelte\";\n\n    import {link} from 'svelte-spa-router';\n  \n    export let params = {};\n\n    import { getStatus } from \"../sdk/status\"\n  \n    let auth_promise = getStatus(params);\n  </script>\n  \n  <div class=\"desktopFormat\">\n    <NavbarDesktop title=\"Toot\"/>\n  \n    <div class=\"content\">\n      <Header title=\"Toot\"/>\n      <main>\n        {#await auth_promise}\n          <p>waiting...</p>\n        {:then status }\n            <a class=\"post\" href=\"/toot/{status[\"id\"]}\" use:link>\n              <!--Change href to mentions thread-->\n              <p id=\"source\" class=\"imptDetails\">{status[\"source\"]} | {status[\"author\"][\"username\"]}</p>\n              <span id=\"dateTime\">{status[\"createdTime\"]}</span><br />\n              <p>{@html status[\"content\"]}</p>\n            </a>\n        {:catch error}\n          <p style=\"color: red\">{error.message}</p>\n        {/await}\n      </main>\n    </div>\n  \n    <NavbarMobile title=\"Toot\"/>\n  </div>\n  \n  <style>\n    main {\n      margin-top: 90px;\n      flex: 1;\n      display: flex;\n      flex-direction: column;\n      padding: 2rem;\n      width: 100%;\n      box-sizing: border-box;\n    }\n  \n    @media screen and (hover: none) {\n      .desktopFormat {\n        display: flex;\n        flex-direction: column;\n        align-items: stretch;\n        margin: 0;\n      }\n    }\n  \n    @media screen and (hover: hover) {\n      .desktopFormat {\n        display: flex;\n        flex-direction: row;\n        margin: 0;\n      }\n      .content {\n        display: flex;\n        flex-direction: column;\n        margin-left: 11.5%;\n        width: 100%;\n      }\n    }\n  \n    a {\n      display: block;\n      text-decoration: none;\n      color: inherit;\n      border-style: none none solid none;\n      border-color: #50c0cb;\n      border-width: 1px;\n      padding: 0px 14px;\n    }\n    a:hover {\n      background-color: #3c4444;\n      fill-opacity: 0.5;\n    }\n    .imptDetails {\n      margin-bottom: 0;\n    }\n    \n  </style>\n  ","<script>\n\n    import {onMount} from 'svelte';\n\n    let state = \"\";\n    let code = \"\";\n\n    onMount(async() => {\n        const urlSearchParams = new URLSearchParams(window.location.search);\n        const param = Object.fromEntries(urlSearchParams.entries());\n\n        const res = await fetch('/auth/mstdn/callback?' + new URLSearchParams({\n            code: param[\"code\"]\n        }));\n        let data = await res.json();\n\n        if(res.ok){\n            code = data[\"status\"];\n            window.location.replace(\"/home\")\n        }\n\n    })\n\n</script>\n\n<main>\n\n    <p>{code}</p>\n\n\t<!-- {#await auth_promise}\n\t\t<p>waiting...</p>\n\t{:then url}\n\t\t<p>\n\t\t\t<a href={url}>Log-in Using Twitter</a>\n\t\t</p>\n\t{:catch error}\n\t\t<p style=\"color: red\">{error.message}</p>\n\t{/await} -->\n\n</main>\n\n\n<style>\n\n\tmain {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tpadding: 1rem;\n\t\twidth: 100%;\n\t\tmax-width: 64rem;\n\t\tmargin: 0 auto;\n\t\tbox-sizing: border-box;\n\t}\n</style>"],"names":[],"version":3,"file":"index.001e661f.css.map"}