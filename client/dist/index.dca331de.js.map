{"mappings":"A,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,C,C,E,C,E,E,C,E,E,E,iB,C,I,E,I,A,C,E,S,C,C,C,G,K,E,O,C,C,E,C,O,A,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,A,I,E,A,M,uB,E,I,O,E,I,C,mB,C,A,C,E,Q,C,S,C,C,C,C,C,C,C,E,C,C,E,E,iB,C,G,I,E,E,S,S,E,C,C,K,E,EE4ByB,IAAA,EAAA,CAAK,CAAA,EAAA,CAAC,OAAO,CAAb,G,M,C,G,C,E,A,C,E,E,O,A,E,K,E,A,C,E,E,I,A,E,G,A,C,E,E,S,A,E,E,Q,M,E,E,C,C,C,C,CAAvB,AAAA,CAAA,EAAA,EAAA,MAAA,AAAA,EAAA,EAAA,EAAA,G,A,C,E,E,M,A,E,E,E,E,E,E,I,C,E,C,C,C,G,A,C,E,E,M,A,E,E,C,C,C,S,E,C,C,C,I,E,E,E,M,C,G,C,E,A,C,E,E,O,A,E,K,E,A,C,E,E,O,A,E,KAHe,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,AAAA,EAAA,yBAAL,AAAA,CAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,OAAA,CAAG,CAAH,EAAA,E,A,C,E,E,I,A,E,E,Q,iB,E,E,C,C,C,C,CADV,AAAA,CAAA,EAAA,EAAA,MAAA,AAAA,EAAA,EAAA,EAAA,GACC,AAAA,CAAA,EAAA,EAAA,MAAuC,AAAvC,EAAA,EAAA,G,A,C,E,E,M,A,E,E,E,E,E,E,I,C,E,C,C,C,G,A,C,E,E,M,A,E,E,C,C,C,S,E,C,C,C,I,E,M,C,G,C,A,C,E,A,C,E,E,O,A,E,I,E,W,C,Y,E,E,C,C,C,C,CAHD,AAAA,CAAA,EAAA,EAAA,MAAA,AAAA,EAAA,EAAA,EAAA,E,E,E,E,I,C,E,C,C,C,G,A,C,E,E,M,A,E,E,C,C,C,S,E,C,C,K,E,I,E,C,I,E,Q,I,C,M,I,C,S,C,E,Q,E,K,E,M,E,M,E,M,C,E,MADO,AAAA,CAAA,EAAA,EAAA,cAAA,AAAA,EAAA,CAAkB,CAAlB,EAAA,CAAA,G,C,G,C,E,A,C,E,E,O,A,E,Q,E,K,C,C,E,E,E,C,C,C,C,CADT,AAAA,CAAA,EAAA,EAAA,MAAA,AAAA,EAAA,EAAA,EAAA,G,E,K,C,C,C,E,E,M,C,I,E,E,K,C,I,E,E,M,C,I,A,E,E,C,C,C,E,C,C,E,E,A,C,E,E,yB,A,E,E,E,E,E,E,E,I,C,E,E,I,C,E,C,C,C,G,A,C,E,E,M,A,E,G,E,K,C,C,G,E,K,C,I,C,E,I,A,C,C,CAjBgB,eAAA,GAAA,CAEV,IAAA,EAAG,MAAS,MAAM,eAClB,EAAI,MAAS,EAAI,IAAI,GAErB,GAAA,EAAI,EAAE,CAEF,OAAA,AADS,KAAK,KAAK,CAAC,GACV,QAAV,AAEG,AAAA,OAAA,AAAA,MAAM,EAAN,A,C,S,E,C,C,C,M,CAIa,I,A,C,M,U,E,e,C,Y,C,C,C,K,G,A,C,E,E,I,A,E,I,C,E,E,E,E,c,C,C,E,C,CDdT,I,EAAQ,CAAC,OAAQ,SAAS,IAAI,AAAC","sources":["<anon>","src/main.ts","src/App.svelte"],"sourcesContent":["var $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequiree8ef\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequiree8ef\"] = parcelRequire;\n}\n/* src/App.svelte generated by Svelte v3.55.1 */ \nvar $6ojdr = parcelRequire(\"6ojdr\");\n\nfunction $eee82cd9c43f282a$var$create_catch_block(ctx) {\n    let p;\n    let t_value = /*error*/ ctx[2].message + \"\";\n    let t;\n    return {\n        c () {\n            p = (0, $6ojdr.element)(\"p\");\n            t = (0, $6ojdr.text)(t_value);\n            (0, $6ojdr.set_style)(p, \"color\", \"red\");\n        },\n        m (target, anchor) {\n            (0, $6ojdr.insert)(target, p, anchor);\n            (0, $6ojdr.append)(p, t);\n        },\n        p: (0, $6ojdr.noop),\n        d (detaching) {\n            if (detaching) (0, $6ojdr.detach)(p);\n        }\n    };\n}\n// (24:1) {:then url}\nfunction $eee82cd9c43f282a$var$create_then_block(ctx) {\n    let p;\n    let a;\n    let t;\n    let a_href_value;\n    return {\n        c () {\n            p = (0, $6ojdr.element)(\"p\");\n            a = (0, $6ojdr.element)(\"a\");\n            t = (0, $6ojdr.text)(\"Log-in Using Mastodon\");\n            (0, $6ojdr.attr)(a, \"href\", a_href_value = /*url*/ ctx[1]);\n            (0, $6ojdr.attr)(a, \"class\", \"svelte-1os4i0q\");\n        },\n        m (target, anchor) {\n            (0, $6ojdr.insert)(target, p, anchor);\n            (0, $6ojdr.append)(p, a);\n            (0, $6ojdr.append)(a, t);\n        },\n        p: (0, $6ojdr.noop),\n        d (detaching) {\n            if (detaching) (0, $6ojdr.detach)(p);\n        }\n    };\n}\n// (22:28)    <p>waiting...</p>  {:then url}\nfunction $eee82cd9c43f282a$var$create_pending_block(ctx) {\n    let p;\n    return {\n        c () {\n            p = (0, $6ojdr.element)(\"p\");\n            p.textContent = \"waiting...\";\n        },\n        m (target, anchor) {\n            (0, $6ojdr.insert)(target, p, anchor);\n        },\n        p: (0, $6ojdr.noop),\n        d (detaching) {\n            if (detaching) (0, $6ojdr.detach)(p);\n        }\n    };\n}\nfunction $eee82cd9c43f282a$var$create_fragment(ctx) {\n    let main;\n    let promise;\n    let info = {\n        ctx: ctx,\n        current: null,\n        token: null,\n        hasCatch: true,\n        pending: $eee82cd9c43f282a$var$create_pending_block,\n        then: $eee82cd9c43f282a$var$create_then_block,\n        catch: $eee82cd9c43f282a$var$create_catch_block,\n        value: 1,\n        error: 2\n    };\n    (0, $6ojdr.handle_promise)(promise = /*mstdn_auth_promise*/ ctx[0], info);\n    return {\n        c () {\n            main = (0, $6ojdr.element)(\"main\");\n            info.block.c();\n        },\n        m (target, anchor) {\n            (0, $6ojdr.insert)(target, main, anchor);\n            info.block.m(main, info.anchor = null);\n            info.mount = ()=>main;\n            info.anchor = null;\n        },\n        p (new_ctx, [dirty]) {\n            ctx = new_ctx;\n            (0, $6ojdr.update_await_block_branch)(info, ctx, dirty);\n        },\n        i: (0, $6ojdr.noop),\n        o: (0, $6ojdr.noop),\n        d (detaching) {\n            if (detaching) (0, $6ojdr.detach)(main);\n            info.block.d();\n            info.token = null;\n            info = null;\n        }\n    };\n}\nasync function $eee82cd9c43f282a$var$getMstdnAuthLink() {\n    let res = await fetch(\"/auth/mstdn\");\n    let text = await res.text();\n    if (res.ok) {\n        let auth_json = JSON.parse(text);\n        return auth_json[\"auth_url\"];\n    } else throw new Error(text);\n}\nfunction $eee82cd9c43f282a$var$instance($$self) {\n    let mstdn_auth_promise = $eee82cd9c43f282a$var$getMstdnAuthLink();\n    return [\n        mstdn_auth_promise\n    ];\n}\nclass $eee82cd9c43f282a$var$App extends (0, $6ojdr.SvelteComponent) {\n    constructor(options){\n        super();\n        (0, $6ojdr.init)(this, options, $eee82cd9c43f282a$var$instance, $eee82cd9c43f282a$var$create_fragment, (0, $6ojdr.safe_not_equal), {});\n    }\n}\nvar $eee82cd9c43f282a$export$2e2bcd8739ae039 = $eee82cd9c43f282a$var$App;\n\n\nconst $ad2bcec7a0192558$var$app = new (0, $eee82cd9c43f282a$export$2e2bcd8739ae039)({\n    target: document.body\n});\nvar $ad2bcec7a0192558$export$2e2bcd8739ae039 = $ad2bcec7a0192558$var$app;\n\n\n//# sourceMappingURL=index.dca331de.js.map\n","import App from './App.svelte';\n\nconst app: any = new App({target: document.body,});\n\nexport default app;","<script>\n\timport \"@fontsource/open-sans\"\n\n\tasync function getMstdnAuthLink(){\n\n\t\tlet res = await fetch('/auth/mstdn');\n\t\tlet text = await res.text();\n\n\t\tif (res.ok){\n\t\t\tlet auth_json = JSON.parse(text)\n\t\t\treturn auth_json[\"auth_url\"];\n\t\t} else{\n\t\t\tthrow new Error(text);\n\t\t}\n\t}\n\n\tlet mstdn_auth_promise = getMstdnAuthLink();\n\n</script>\n\n<main>\n\t{#await mstdn_auth_promise}\n\t\t<p>waiting...</p>\n\t{:then url}\n\t\t<p>\n\t\t\t<a href={url}>Log-in Using Mastodon</a>\n\t\t</p>\n\t{:catch error}\n\t\t<p style=\"color: red\">{error.message}</p>\n\t{/await}\n</main>\n\n<style>\n\ta {\n\t\tfont-family: \"Open Sans\";\n\t}\n</style>"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$6ojdr","$eee82cd9c43f282a$var$create_catch_block","ctx","p","t","t_value","message","c","element","text","set_style","m","target","anchor","insert","append","noop","d","detaching","detach","$eee82cd9c43f282a$var$create_then_block","a","attr","$eee82cd9c43f282a$var$create_pending_block","textContent","$eee82cd9c43f282a$var$create_fragment","main","info","current","token","hasCatch","pending","then","catch","value","error","handle_promise","block","mount","new_ctx","dirty","update_await_block_branch","i","o","$eee82cd9c43f282a$var$getMstdnAuthLink","res","fetch","ok","auth_json","JSON","parse","$eee82cd9c43f282a$var$instance","$$self","$eee82cd9c43f282a$var$App","SvelteComponent","constructor","options","safe_not_equal","document","body"],"version":3,"file":"index.dca331de.js.map"}